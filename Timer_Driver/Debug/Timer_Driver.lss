
Timer_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000482  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800060  00800060  000004f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000528  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cd2  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a7  00000000  00000000  00001366  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000707  00000000  00000000  00001b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  00002214  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cb  00000000  00000000  000024a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000061f  00000000  00000000  0000296b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00002f8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__vector_7>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 ac 01 	jmp	0x358	; 0x358 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 37       	cpi	r26, 0x70	; 112
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 32 01 	call	0x264	; 0x264 <main>
  74:	0c 94 3f 02 	jmp	0x47e	; 0x47e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_SetPinDir>:
		case DIO_PORTC :
		PORTC = Value;
		break;
		
		case DIO_PORTD :
		PORTD = Value;
  7c:	44 23       	and	r20, r20
  7e:	b9 f1       	breq	.+110    	; 0xee <DIO_SetPinDir+0x72>
  80:	41 30       	cpi	r20, 0x01	; 1
  82:	09 f0       	breq	.+2      	; 0x86 <DIO_SetPinDir+0xa>
  84:	6b c0       	rjmp	.+214    	; 0x15c <DIO_SetPinDir+0xe0>
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	89 f0       	breq	.+34     	; 0xac <DIO_SetPinDir+0x30>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_SetPinDir+0x1a>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	c9 f0       	breq	.+50     	; 0xc2 <DIO_SetPinDir+0x46>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	11 f1       	breq	.+68     	; 0xd8 <DIO_SetPinDir+0x5c>
  94:	08 95       	ret
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_SetPinDir+0x26>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_SetPinDir+0x22>
  a6:	82 2b       	or	r24, r18
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
  ac:	27 b3       	in	r18, 0x17	; 23
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_SetPinDir+0x3c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_SetPinDir+0x38>
  bc:	82 2b       	or	r24, r18
  be:	87 bb       	out	0x17, r24	; 23
  c0:	08 95       	ret
  c2:	24 b3       	in	r18, 0x14	; 20
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_SetPinDir+0x52>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_SetPinDir+0x4e>
  d2:	82 2b       	or	r24, r18
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	08 95       	ret
  d8:	21 b3       	in	r18, 0x11	; 17
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <DIO_SetPinDir+0x68>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <DIO_SetPinDir+0x64>
  e8:	82 2b       	or	r24, r18
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	08 95       	ret
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	91 f0       	breq	.+36     	; 0x116 <DIO_SetPinDir+0x9a>
  f2:	28 f0       	brcs	.+10     	; 0xfe <DIO_SetPinDir+0x82>
  f4:	82 30       	cpi	r24, 0x02	; 2
  f6:	d9 f0       	breq	.+54     	; 0x12e <DIO_SetPinDir+0xb2>
  f8:	83 30       	cpi	r24, 0x03	; 3
  fa:	29 f1       	breq	.+74     	; 0x146 <DIO_SetPinDir+0xca>
  fc:	08 95       	ret
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDir+0x8e>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDir+0x8a>
 10e:	80 95       	com	r24
 110:	82 23       	and	r24, r18
 112:	8a bb       	out	0x1a, r24	; 26
 114:	08 95       	ret
 116:	27 b3       	in	r18, 0x17	; 23
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_SetPinDir+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	6a 95       	dec	r22
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_SetPinDir+0xa2>
 126:	80 95       	com	r24
 128:	82 23       	and	r24, r18
 12a:	87 bb       	out	0x17, r24	; 23
 12c:	08 95       	ret
 12e:	24 b3       	in	r18, 0x14	; 20
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_SetPinDir+0xbe>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_SetPinDir+0xba>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	21 b3       	in	r18, 0x11	; 17
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_SetPinDir+0xd6>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_SetPinDir+0xd2>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	81 bb       	out	0x11, r24	; 17
 15c:	08 95       	ret

0000015e <DIO_SetPinValue>:


void DIO_SetPinValue(uint8_t Port, uint8_t Pin, uint8_t Value)

{
	switch (Value)
 15e:	44 23       	and	r20, r20
 160:	b9 f1       	breq	.+110    	; 0x1d0 <DIO_SetPinValue+0x72>
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	09 f0       	breq	.+2      	; 0x168 <DIO_SetPinValue+0xa>
 166:	6b c0       	rjmp	.+214    	; 0x23e <DIO_SetPinValue+0xe0>
	{
		case DIO_PIN_HIGH :
		switch (Port) 
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	89 f0       	breq	.+34     	; 0x18e <DIO_SetPinValue+0x30>
 16c:	28 f0       	brcs	.+10     	; 0x178 <DIO_SetPinValue+0x1a>
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	c9 f0       	breq	.+50     	; 0x1a4 <DIO_SetPinValue+0x46>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	11 f1       	breq	.+68     	; 0x1ba <DIO_SetPinValue+0x5c>
 176:	08 95       	ret
		{
			case DIO_PORTA :
			SET_BIT(PORTA , Pin);
 178:	2b b3       	in	r18, 0x1b	; 27
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetPinValue+0x26>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetPinValue+0x22>
 188:	82 2b       	or	r24, r18
 18a:	8b bb       	out	0x1b, r24	; 27
			break;
 18c:	08 95       	ret
			
			case DIO_PORTB :
			SET_BIT(PORTB, Pin);
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_SetPinValue+0x3c>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_SetPinValue+0x38>
 19e:	82 2b       	or	r24, r18
 1a0:	88 bb       	out	0x18, r24	; 24
			break;
 1a2:	08 95       	ret
			
			case DIO_PORTC :
			SET_BIT(PORTC, Pin);
 1a4:	25 b3       	in	r18, 0x15	; 21
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_SetPinValue+0x52>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_SetPinValue+0x4e>
 1b4:	82 2b       	or	r24, r18
 1b6:	85 bb       	out	0x15, r24	; 21
			break;
 1b8:	08 95       	ret
			
			case DIO_PORTD :
			SET_BIT(PORTD , Pin);
 1ba:	22 b3       	in	r18, 0x12	; 18
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_SetPinValue+0x68>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_SetPinValue+0x64>
 1ca:	82 2b       	or	r24, r18
 1cc:	82 bb       	out	0x12, r24	; 18
			break;
 1ce:	08 95       	ret
		
		
		break;
		
		case DIO_PIN_LOW :
		switch (Port) 
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	91 f0       	breq	.+36     	; 0x1f8 <DIO_SetPinValue+0x9a>
 1d4:	28 f0       	brcs	.+10     	; 0x1e0 <DIO_SetPinValue+0x82>
 1d6:	82 30       	cpi	r24, 0x02	; 2
 1d8:	d9 f0       	breq	.+54     	; 0x210 <DIO_SetPinValue+0xb2>
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	29 f1       	breq	.+74     	; 0x228 <DIO_SetPinValue+0xca>
 1de:	08 95       	ret
		{
			case DIO_PORTA :
			CLR_BIT(PORTA , Pin);
 1e0:	2b b3       	in	r18, 0x1b	; 27
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_SetPinValue+0x8e>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_SetPinValue+0x8a>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	8b bb       	out	0x1b, r24	; 27
			break;
 1f6:	08 95       	ret
			
			case DIO_PORTB :
			CLR_BIT(PORTB, Pin);
 1f8:	28 b3       	in	r18, 0x18	; 24
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_SetPinValue+0xa6>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_SetPinValue+0xa2>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	88 bb       	out	0x18, r24	; 24
			break;
 20e:	08 95       	ret
			
			case DIO_PORTC :
			CLR_BIT(PORTC, Pin);
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_SetPinValue+0xbe>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_SetPinValue+0xba>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	85 bb       	out	0x15, r24	; 21
			break;
 226:	08 95       	ret
			
			case DIO_PORTD :
			CLR_BIT(PORTD , Pin);
 228:	22 b3       	in	r18, 0x12	; 18
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_SetPinValue+0xd6>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_SetPinValue+0xd2>
 238:	80 95       	com	r24
 23a:	82 23       	and	r24, r18
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	08 95       	ret

00000240 <LED0_Init>:
#include "DIO.h"


void LED0_Init(void)
{
	DIO_SetPinDir(DIO_PORTB, DIO_PIN4, DIO_PIN_OUTPUT);
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	64 e0       	ldi	r22, 0x04	; 4
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetPinDir>
 24a:	08 95       	ret

0000024c <LED0_On>:
}

void LED0_On(void)
{
	DIO_SetPinValue(DIO_PORTB, DIO_PIN4 , DIO_PIN_HIGH);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	64 e0       	ldi	r22, 0x04	; 4
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_SetPinValue>
 256:	08 95       	ret

00000258 <LED0_Off>:
}
void LED0_Off(void)
{
	DIO_SetPinValue(DIO_PORTB, DIO_PIN4 , DIO_PIN_LOW);
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	64 e0       	ldi	r22, 0x04	; 4
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_SetPinValue>
 262:	08 95       	ret

00000264 <main>:
extern uint32_t INIT_VALUE;


int main(void)
{
	LED0_Init();
 264:	0e 94 20 01 	call	0x240	; 0x240 <LED0_Init>
	Timer0_Init();
 268:	0e 94 47 01 	call	0x28e	; 0x28e <Timer0_Init>


    while (1) 
    {
		LED0_Off();
 26c:	0e 94 2c 01 	call	0x258	; 0x258 <LED0_Off>
		Timer0_SetDelay(500);
 270:	64 ef       	ldi	r22, 0xF4	; 244
 272:	71 e0       	ldi	r23, 0x01	; 1
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 54 01 	call	0x2a8	; 0x2a8 <Timer0_SetDelay>
		LED0_On();
 27c:	0e 94 26 01 	call	0x24c	; 0x24c <LED0_On>
		Timer0_SetDelay(500);
 280:	64 ef       	ldi	r22, 0xF4	; 244
 282:	71 e0       	ldi	r23, 0x01	; 1
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 54 01 	call	0x2a8	; 0x2a8 <Timer0_SetDelay>
 28c:	ef cf       	rjmp	.-34     	; 0x26c <main+0x8>

0000028e <Timer0_Init>:
	CLR_BIT(TCCR1B,2);
}

void Set_CallBack_1(void(*p)(void))
{
	Ptr_1 = p;
 28e:	83 b7       	in	r24, 0x33	; 51
 290:	87 7f       	andi	r24, 0xF7	; 247
 292:	83 bf       	out	0x33, r24	; 51
 294:	83 b7       	in	r24, 0x33	; 51
 296:	8f 7b       	andi	r24, 0xBF	; 191
 298:	83 bf       	out	0x33, r24	; 51
 29a:	8f b7       	in	r24, 0x3f	; 63
 29c:	80 68       	ori	r24, 0x80	; 128
 29e:	8f bf       	out	0x3f, r24	; 63
 2a0:	89 b7       	in	r24, 0x39	; 57
 2a2:	81 60       	ori	r24, 0x01	; 1
 2a4:	89 bf       	out	0x39, r24	; 57
 2a6:	08 95       	ret

000002a8 <Timer0_SetDelay>:
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	9b 01       	movw	r18, r22
 2ae:	ac 01       	movw	r20, r24
 2b0:	a8 ee       	ldi	r26, 0xE8	; 232
 2b2:	b3 e0       	ldi	r27, 0x03	; 3
 2b4:	0e 94 25 02 	call	0x44a	; 0x44a <__muluhisi3>
 2b8:	8b 01       	movw	r16, r22
 2ba:	9c 01       	movw	r18, r24
 2bc:	68 94       	set
 2be:	15 f8       	bld	r1, 5
 2c0:	36 95       	lsr	r19
 2c2:	27 95       	ror	r18
 2c4:	17 95       	ror	r17
 2c6:	07 95       	ror	r16
 2c8:	16 94       	lsr	r1
 2ca:	d1 f7       	brne	.-12     	; 0x2c0 <Timer0_SetDelay+0x18>
 2cc:	dc 01       	movw	r26, r24
 2ce:	cb 01       	movw	r24, r22
 2d0:	07 2e       	mov	r0, r23
 2d2:	7e e0       	ldi	r23, 0x0E	; 14
 2d4:	b6 95       	lsr	r27
 2d6:	a7 95       	ror	r26
 2d8:	97 95       	ror	r25
 2da:	87 95       	ror	r24
 2dc:	7a 95       	dec	r23
 2de:	d1 f7       	brne	.-12     	; 0x2d4 <Timer0_SetDelay+0x2c>
 2e0:	70 2d       	mov	r23, r0
 2e2:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <NUM_OVF>
 2e6:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <NUM_OVF+0x1>
 2ea:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <NUM_OVF+0x2>
 2ee:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <NUM_OVF+0x3>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	a0 e0       	ldi	r26, 0x00	; 0
 2f8:	b0 e0       	ldi	r27, 0x00	; 0
 2fa:	80 1b       	sub	r24, r16
 2fc:	91 09       	sbc	r25, r1
 2fe:	a1 09       	sbc	r26, r1
 300:	b1 09       	sbc	r27, r1
 302:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <INIT_VALUE>
 306:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <INIT_VALUE+0x1>
 30a:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <INIT_VALUE+0x2>
 30e:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <INIT_VALUE+0x3>
 312:	82 bf       	out	0x32, r24	; 50
 314:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <INIT_VALUE>
 318:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <INIT_VALUE+0x1>
 31c:	a0 91 66 00 	lds	r26, 0x0066	; 0x800066 <INIT_VALUE+0x2>
 320:	b0 91 67 00 	lds	r27, 0x0067	; 0x800067 <INIT_VALUE+0x3>
 324:	89 2b       	or	r24, r25
 326:	8a 2b       	or	r24, r26
 328:	8b 2b       	or	r24, r27
 32a:	99 f0       	breq	.+38     	; 0x352 <Timer0_SetDelay+0xaa>
 32c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <NUM_OVF>
 330:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <NUM_OVF+0x1>
 334:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <NUM_OVF+0x2>
 338:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <NUM_OVF+0x3>
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	a1 1d       	adc	r26, r1
 340:	b1 1d       	adc	r27, r1
 342:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <NUM_OVF>
 346:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <NUM_OVF+0x1>
 34a:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <NUM_OVF+0x2>
 34e:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <NUM_OVF+0x3>
 352:	1f 91       	pop	r17
 354:	0f 91       	pop	r16
 356:	08 95       	ret

00000358 <__vector_11>:
 358:	1f 92       	push	r1
 35a:	0f 92       	push	r0
 35c:	0f b6       	in	r0, 0x3f	; 63
 35e:	0f 92       	push	r0
 360:	11 24       	eor	r1, r1
 362:	2f 93       	push	r18
 364:	3f 93       	push	r19
 366:	4f 93       	push	r20
 368:	5f 93       	push	r21
 36a:	6f 93       	push	r22
 36c:	7f 93       	push	r23
 36e:	8f 93       	push	r24
 370:	9f 93       	push	r25
 372:	af 93       	push	r26
 374:	bf 93       	push	r27
 376:	ef 93       	push	r30
 378:	ff 93       	push	r31
 37a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 37e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 382:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 386:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	a1 1d       	adc	r26, r1
 38e:	b1 1d       	adc	r27, r1
 390:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 394:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 398:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 39c:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3a0:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <NUM_OVF>
 3a4:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <NUM_OVF+0x1>
 3a8:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <NUM_OVF+0x2>
 3ac:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <NUM_OVF+0x3>
 3b0:	84 17       	cp	r24, r20
 3b2:	95 07       	cpc	r25, r21
 3b4:	a6 07       	cpc	r26, r22
 3b6:	b7 07       	cpc	r27, r23
 3b8:	81 f4       	brne	.+32     	; 0x3da <__vector_11+0x82>
 3ba:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3be:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3c2:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3c6:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3ca:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <Ptr_0>
 3ce:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <Ptr_0+0x1>
 3d2:	09 95       	icall
 3d4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <INIT_VALUE>
 3d8:	82 bf       	out	0x32, r24	; 50
 3da:	ff 91       	pop	r31
 3dc:	ef 91       	pop	r30
 3de:	bf 91       	pop	r27
 3e0:	af 91       	pop	r26
 3e2:	9f 91       	pop	r25
 3e4:	8f 91       	pop	r24
 3e6:	7f 91       	pop	r23
 3e8:	6f 91       	pop	r22
 3ea:	5f 91       	pop	r21
 3ec:	4f 91       	pop	r20
 3ee:	3f 91       	pop	r19
 3f0:	2f 91       	pop	r18
 3f2:	0f 90       	pop	r0
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	0f 90       	pop	r0
 3f8:	1f 90       	pop	r1
 3fa:	18 95       	reti

000003fc <__vector_7>:
}


ISR(TIMER1_COMPA_vect)
{
 3fc:	1f 92       	push	r1
 3fe:	0f 92       	push	r0
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	0f 92       	push	r0
 404:	11 24       	eor	r1, r1
 406:	2f 93       	push	r18
 408:	3f 93       	push	r19
 40a:	4f 93       	push	r20
 40c:	5f 93       	push	r21
 40e:	6f 93       	push	r22
 410:	7f 93       	push	r23
 412:	8f 93       	push	r24
 414:	9f 93       	push	r25
 416:	af 93       	push	r26
 418:	bf 93       	push	r27
 41a:	ef 93       	push	r30
 41c:	ff 93       	push	r31
	(*Ptr_1)();
 41e:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <Ptr_1>
 422:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <Ptr_1+0x1>
 426:	09 95       	icall
}
 428:	ff 91       	pop	r31
 42a:	ef 91       	pop	r30
 42c:	bf 91       	pop	r27
 42e:	af 91       	pop	r26
 430:	9f 91       	pop	r25
 432:	8f 91       	pop	r24
 434:	7f 91       	pop	r23
 436:	6f 91       	pop	r22
 438:	5f 91       	pop	r21
 43a:	4f 91       	pop	r20
 43c:	3f 91       	pop	r19
 43e:	2f 91       	pop	r18
 440:	0f 90       	pop	r0
 442:	0f be       	out	0x3f, r0	; 63
 444:	0f 90       	pop	r0
 446:	1f 90       	pop	r1
 448:	18 95       	reti

0000044a <__muluhisi3>:
 44a:	0e 94 30 02 	call	0x460	; 0x460 <__umulhisi3>
 44e:	a5 9f       	mul	r26, r21
 450:	90 0d       	add	r25, r0
 452:	b4 9f       	mul	r27, r20
 454:	90 0d       	add	r25, r0
 456:	a4 9f       	mul	r26, r20
 458:	80 0d       	add	r24, r0
 45a:	91 1d       	adc	r25, r1
 45c:	11 24       	eor	r1, r1
 45e:	08 95       	ret

00000460 <__umulhisi3>:
 460:	a2 9f       	mul	r26, r18
 462:	b0 01       	movw	r22, r0
 464:	b3 9f       	mul	r27, r19
 466:	c0 01       	movw	r24, r0
 468:	a3 9f       	mul	r26, r19
 46a:	70 0d       	add	r23, r0
 46c:	81 1d       	adc	r24, r1
 46e:	11 24       	eor	r1, r1
 470:	91 1d       	adc	r25, r1
 472:	b2 9f       	mul	r27, r18
 474:	70 0d       	add	r23, r0
 476:	81 1d       	adc	r24, r1
 478:	11 24       	eor	r1, r1
 47a:	91 1d       	adc	r25, r1
 47c:	08 95       	ret

0000047e <_exit>:
 47e:	f8 94       	cli

00000480 <__stop_program>:
 480:	ff cf       	rjmp	.-2      	; 0x480 <__stop_program>
